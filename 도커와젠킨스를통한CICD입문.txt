클라우드컴퓨팅 - 한국휴렛팩커드 교육센터(HPE)
도커와 젠킨스를 통한 CI/CD 입문

오승욱
uvely@naver.com

CD -> Continous Delivery
    -> Continous Deployment	

SAST -> Static Application Security Test
DAST -> 


mobaxterm


이름 : rocky
종류 : Linux
버전 : Red Hat 64-bit
메모리 : 16384
디스크 : 동적할당, vdi, 40GB


vCPU : 1(default) -> 4
Network : NAT (default) + host-only

프로세서 (상단 탭)
설정 -> 네트워크 (좌패널) -> 어뎁터 (상단 탭) -> 사용하기 체크 -> 호스트 전용 어댑터 선택


Allow root ssh login with password

172.16.0.200/24
255.255.255.0

Vm 관리자-> 파일 -> 호스트 네트워크 관리자

192.168.56.1 -> 172.16.0.1

192.168.56.101


Rocky Linux를 기동한 후 root로 로그인 하고, 아래 명령을 실행

ip a
nmcli con mod enp0s8 \
ipv4.method manual \
ipv4.address 172.16.0.200/24
poweroff

head로 실행(Background 로 실행)



mobaXterm에서  해당 세션을 더블클릭한 후 가상 시스템

[root@localhost ~]# dnf install -y git 			# git 설치
[root@localhost ~]# git clone https://github.com/uvelys/jenkins.git		# git repository 복제하기
[root@localhost ~]# cd jenkins
[root@localhost jenkins]# ls
[root@localhost jenkins]# cd 01_docker/
[root@localhost 01_docker]# cat install_docker.sh

--- install_docker.sh 의 내용 명령 ----
sudo systemctl stop firewalld
sudo systemctl disable firewalld
sudo curl -o /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install -y docker-ce

# docker 1.13 이후에는 docker-ce와 docker-ee로 분리가 됨  ce(custom edition), ee(enterprise edition) 임
# 그래서 반드시 docker 말고, docker-ce 를 설치해야함

sudo systemctl start docker
sudo systemctl enable docker
---------------------------------------

---- 참고 명령 ----
cd /etc/yum.repos.d/
dnf repolist
-------------------


[root@localhost 01_docker]# sh install_docker.sh			# docker 설치
[root@localhost 01_docker]# docker info				# docker 확인

[root@localhost 01_docker]# docker run --rm quay.io/uvelyster/nginx	# 특정 깃허브 nginx 레포시터리에 있는 이미지를 가져와 nginx 곧 바로 실행

------- 참고사항 -----------
Ctrl+C  :  프로세스종료

docker pull : 로컬로 이미지 다운로드
docker create : 도커 컨테이너 생성
docker start : 컨테이너 실행
 
docker ps : 도커 상태 목록
ex) [root@localhost 01_docker]# docker ps
CONTAINER ID   IMAGE                     COMMAND                  CREATED          STATUS          PORTS     NAMES
ac293a100198   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   18 minutes ago   Up 18 minutes   80/tcp    awesome_goldwasser


docker run : 컨테이너 바로 실행
docker run --rm -d quay.io/uvelyster/nginx 		# 백그라운드로 동작 : -d 옵션
-d : detach 분리 모드
-i : interactive 모드
-t : tty 사용
ex) docker run -it IMAGE bash			# bash 프로세스로 interactive 모드로 tty 사용
--name : 지정하지 않으면, 임의의 이름으로 지정되지만, 이 옵션을 사용하면, 서버 프로세스의 이름을 지정할 수 있음
ex) docker run --name testweb -d quay.io/uvelyster/nginx
-e : 환경변수 설정
ex) docker run -e PORT=1234			# 포트번호 변경

docker stop : 컨테이너 중지
ex) docker stop 6	# 6번 프로세스 정지

docker rm : 컨테이너 삭제
ex) docker rm 6	# 6번 프로세스 제거
ex) docker rm -f 6	# 6번 프로세스 강제 제거

docker rmi : 이미지 삭제


1. 컨테이너 중지:
docker stop ac293a100198

2. 컨테이너 제거:
docker rm ac293a100198

3. 컨테이너 강제 제거(중지 및 제거)
docker rm -f ac293a100198


docker run IMAGE
docker exec CONTAINER CMD

docker network create demonet --subnet 172.20.0.0/24
---------------------------------

[root@localhost 01_docker]# docker run --rm -d quay.io/uvelyster/nginx	# 아래 ac293a1001983d61c81e45ab44f681a54a1fb130b8c5136fe18ba7084cbd3035 는 임의의 서버 프로세스의 이름임
ac293a1001983d61c81e45ab44f681a54a1fb130b8c5136fe18ba7084cbd3035
[root@localhost 01_docker]# docker ps

[root@localhost 01_docker]# docker run --rm -it quay.io/uvelyster/nginx bash
root@05ef02a73603:/# 

root@05ef02a73603:/# cat /usr/share/nginx/html/index.html
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>

root@05ef02a73603:/# exit
exit
[root@localhost 01_docker]# 





Network / Storage / Image build


Network

[root@localhost 01_docker]# ip a			# 네트워크 내역 보기
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen                                              1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group de                                             fault qlen 1000
    link/ether 08:00:27:61:89:16 brd ff:ff:ff:ff:ff:ff
    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic noprefixroute enp0s3
       valid_lft 79542sec preferred_lft 79542sec
    inet6 fe80::a00:27ff:fe61:8916/64 scope link noprefixroute
       valid_lft forever preferred_lft forever
3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group de                                             fault qlen 1000
    link/ether 08:00:27:5e:0f:10 brd ff:ff:ff:ff:ff:ff
    inet 172.16.0.200/24 brd 172.16.0.255 scope global noprefixroute enp0s8
       valid_lft forever preferred_lft forever
    inet6 fe80::a00:27ff:fe5e:f10/64 scope link noprefixroute
       valid_lft forever preferred_lft forever
4: docker0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group de                                             fault
    link/ether 02:42:76:4b:8d:89 brd ff:ff:ff:ff:ff:ff
    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0
       valid_lft forever preferred_lft forever
    inet6 fe80::42:76ff:fe4b:8d89/64 scope link
       valid_lft forever preferred_lft forever
8: veth04c25da@if7: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue master do                                             cker0 state UP group default
    link/ether b2:5f:9f:67:ba:40 brd ff:ff:ff:ff:ff:ff link-netnsid 0
    inet6 fe80::b05f:9fff:fe67:ba40/64 scope link
       valid_lft forever preferred_lft forever
[root@localhost 01_docker]#

위 명령에서 4번 내역은
172.17.0.1/16

8.8.0.0

Broad Cast : 172.17.0.0 ~ 172.17.255.255


[root@localhost 01_docker]# docker network ls		# docker 에서 사용하는 네트워크 목록
NETWORK ID     NAME      DRIVER    SCOPE
e3b856841efa   bridge    bridge    local
4b7c5e1deb1c   host      host      local
79a6fce21c3f   none      null      local


[root@localhost 01_docker]# curl 172.17.0.2		# 172.17.0.2 의 ip주소를 갖는 nginx 서버에 요청
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
[root@localhost 01_docker]#


[root@localhost 01_docker]# docker run -d -p 1234:80 quay.io/uvelyster/nginx		# -p 옵션은 특정 포트를 할당하는 옵션
b488a3d615668c5be061f0a2dd5ed45799e7c153386d70740dc47406c0b213fc

웹브라우저에서 URL 입력줄에 http://172.16.0.200:1234/   입력하면, nginx가 index.html 을 응답함.



[root@localhost 01_docker]# docker run -d -P quay.io/uvelyster/nginx			# -P 옵션은 사용가능한 포트를 자동으로 할당하는 옵션
fbd814759b806de1f8b21628e7fe4a2a2ff759ff65dc677e91f7734f38d69ed0
[root@localhost 01_docker]# docker ps -a
CONTAINER ID   IMAGE                     COMMAND                  CREATED             STATUS             PORTS                                     NAMES
fbd814759b80   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   5 seconds ago       Up 4 seconds       0.0.0.0:32768->80/tcp, :::32768->80/tcp   serene_kilby
b488a3d61566   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   8 minutes ago       Up 8 minutes       0.0.0.0:1234->80/tcp, :::1234->80/tcp     gallant_dewdney
ac293a100198   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   About an hour ago   Up About an hour   80/tcp                                    awesome_goldwasser

웹브라우저에서 URL 입력줄에 http://172.16.0.200:32768/   입력하면, nginx가 index.html 을 응답함.





[root@localhost 01_docker]# docker run -d -v demovol:/usr/share/nginx/html -p 2222:80 quay.io/uvelyster/nginx
a0e08358985f5eb0206d4dbbf8c7cefaf22df875e4137ffaad0612edb5221207

[root@localhost 01_docker]# docker volume ls
DRIVER    VOLUME NAME
local     demovol

[root@localhost 01_docker]# docker volume inspect demovol
[
    {
        "CreatedAt": "2024-06-29T17:05:49+09:00",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/demovol/_data",
        "Name": "demovol",
        "Options": null,
        "Scope": "local"
    }
]
[root@localhost 01_docker]#



[root@localhost 01_docker]# vi /usr/share/nginx/html/index.html
[root@localhost 01_docker]# vi /usr/share/nginx/index.html
[root@localhost 01_docker]# cd /var/lib/docker/volumes/demovol/_data
[root@localhost _data]# ls
50x.html  index.html

[root@localhost _data]# vi index.html

[root@localhost _data]# docker run -d -v demovol:/usr/share/nginx/html -p 3333:80 quay.io/uvelyster/nginx

[root@localhost _data]# docker run -d -v demovol:/usr/share/nginx/html -p 4444:80 quay.io/uvelyster/nginx
bbfe0cb25e0aad410f816c4ab788bf31cea1d7ffa95e5534f07de7d58291c1d7

[root@localhost _data]# docker ps -a
CONTAINER ID   IMAGE                     COMMAND                  CREATED              STATUS              PORTS                                     NAMES
bbfe0cb25e0a   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   14 seconds ago       Up 14 seconds       0.0.0.0:4444->80/tcp, :::4444->80/tcp     priceless_greider
3979c2099fe1   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   About a minute ago   Up About a minute   0.0.0.0:3333->80/tcp, :::3333->80/tcp     xenodochial_chandrasekhar
a0e08358985f   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   8 minutes ago        Up 8 minutes        0.0.0.0:2222->80/tcp, :::2222->80/tcp     crazy_shockley
fbd814759b80   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   39 minutes ago       Up 39 minutes       0.0.0.0:32768->80/tcp, :::32768->80/tcp   serene_kilby
b488a3d61566   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   48 minutes ago       Up 48 minutes       0.0.0.0:1234->80/tcp, :::1234->80/tcp     gallant_dewdney
ac293a100198   quay.io/uvelyster/nginx   "/docker-entrypoint.…"   2 hours ago          Up 2 hours          80/tcp                                    awesome_goldwasser

[root@localhost _data]# docker rm -f bbfe0cb25e0aad410f816c4ab788bf31cea1d7ffa95e5534f07de7d58291c1d7
bbfe0cb25e0aad410f816c4ab788bf31cea1d7ffa95e5534f07de7d58291c1d7

[root@localhost _data]# docker volume prune -a
WARNING! This will remove all local volumes not used by at least one container.
Are you sure you want to continue? [y/N] y
Total reclaimed space: 0B
[root@localhost _data]#




bindmount / volume




create image
	- 수동 빌드 : docker run + docker commit
	- 자동 빌드 : docker build - 스크립트 파일 필요(Dockerfile)


자동 빌드를 위한 Dockerfile 작성 문법

# : 각주

Instruction Argument

FROM: 베이스 이미지를 지정합니다.
RUN: 컨테이너 내에서 명령을 실행합니다.
COPY 또는 ADD: 파일을 이미지에 복사합니다.
WORKDIR: 작업 디렉토리를 설정합니다.
CMD 또는 ENTRYPOINT: 컨테이너가 시작될 때 실행할 명령을 지정합니다.
EXPOSE: 컨테이너에서 사용할 포트를 지정합니다.
ENV: 환경 변수를 설정합니다.
VOLUME: 마운트 포인트


자동 빌드를 위한 Dockerfile 작성 예시

# 베이스 이미지로 nginx를 사용
FROM nginx:latest

# 환경 변수를 설정 (옵션)
ENV NGINX_VERSION 1.19.3

# 호스트 시스템의 html 디렉토리 내용을 컨테이너의 /usr/share/nginx/html 디렉토리로 복사
COPY html/ /usr/share/nginx/html/

# Nginx 컨테이너가 80번 포트를 노출하도록 설정
EXPOSE 80

# Nginx를 실행하는 기본 명령 설정
CMD ["nginx", "-g", "daemon off;"]

[root@localhost share]# cd ~

[root@localhost ~]# cd jenkins

[root@localhost jenkins]# ls
01_docker  02_gitlab  03_jenkins  04_harbor  05_owasp  06_sonarqube  07_artifactory  08_kubernetes  nodejs

[root@localhost jenkins]# cd nodejs

[root@localhost nodejs]# docker build . -t myimage
[+] Building 19.1s (13/13) FINISHED            

[root@localhost nodejs]# docker images
REPOSITORY                TAG       IMAGE ID       CREATED          SIZE
myimage                   latest    2f197b418a9c   58 seconds ago   114MB




[root@localhost 01_docker]# yum remove dnsmasq
Dependencies resolved.
==========================================================================================================================================================================
 Package                               Architecture                         Version                                        Repository                                Size
==========================================================================================================================================================================
Removing:
 dnsmasq                               x86_64                               2.85-16.el9_4                                  @appstream                               702 k

Transaction Summary
==========================================================================================================================================================================
Remove  1 Package

Freed space: 702 k
Is this ok [y/N]: y
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                                                                  1/1
  Running scriptlet: dnsmasq-2.85-16.el9_4.x86_64                                                                                                                     1/1
Removed "/etc/systemd/system/multi-user.target.wants/dnsmasq.service".

  Erasing          : dnsmasq-2.85-16.el9_4.x86_64                                                                                                                     1/1
warning: /etc/dnsmasq.conf saved as /etc/dnsmasq.conf.rpmsave

  Running scriptlet: dnsmasq-2.85-16.el9_4.x86_64                                                                                                                     1/1
  Verifying        : dnsmasq-2.85-16.el9_4.x86_64                                                                                                                     1/1

Removed:
  dnsmasq-2.85-16.el9_4.x86_64

Complete!
[root@localhost 01_docker]# yum install dnsmasq
Last metadata expiration check: 0:54:53 ago on Sun Jun 30 09:15:11 2024.
Dependencies resolved.
==========================================================================================================================================================================
 Package                                Architecture                          Version                                      Repository                                Size
==========================================================================================================================================================================
Installing:
 dnsmasq                                x86_64                                2.85-16.el9_4                                appstream                                326 k

Transaction Summary
==========================================================================================================================================================================
Install  1 Package

Total download size: 326 k
Installed size: 702 k
Is this ok [y/N]: y
Downloading Packages:
dnsmasq-2.85-16.el9_4.x86_64.rpm                                                                                                          3.0 MB/s | 326 kB     00:00
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                                                     460 kB/s | 326 kB     00:00
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                                                                  1/1
  Running scriptlet: dnsmasq-2.85-16.el9_4.x86_64                                                                                                                     1/1
  Installing       : dnsmasq-2.85-16.el9_4.x86_64                                                                                                                     1/1
  Running scriptlet: dnsmasq-2.85-16.el9_4.x86_64                                                                                                                     1/1
  Verifying        : dnsmasq-2.85-16.el9_4.x86_64                                                                                                                     1/1

Installed:
  dnsmasq-2.85-16.el9_4.x86_64

Complete!
[root@localhost 01_docker]#
[root@localhost 01_docker]#
[root@localhost 01_docker]# ls
hosts  install_docker.sh  set_dns.sh
[root@localhost 01_docker]# vi /etc/dnsmasq.conf

# Configuration file for dnsmasq.
#
# Format is one option per line, legal options are the same
# as the long options legal on the command line. See
# "/usr/sbin/dnsmasq --help" or "man 8 dnsmasq" for details.

# Listen on this specific port instead of the standard DNS port
# (53). Setting this to zero completely disables DNS function,
# leaving only DHCP and/or TFTP.
#port=5353

# The following two options make you a better netizen, since they
# tell dnsmasq to filter out queries which the public DNS cannot
# answer, and which load the servers (especially the root servers)
# unnecessarily. If you have a dial-on-demand link they also stop
# these requests from bringing up the link unnecessarily.

# Never forward plain names (without a dot or domain part)
#domain-needed
# Never forward addresses in the non-routed address spaces.
#bogus-priv

# Uncomment these to enable DNSSEC validation and caching:
# (Requires dnsmasq to be built with DNSSEC option.)
#conf-file=/usr/share/dnsmasq/trust-anchors.conf
#dnssec

# Replies which are not DNSSEC signed may be legitimate, because the domain
# is unsigned, or may be forgeries. Setting this option tells dnsmasq to
# check that an unsigned reply is OK, by finding a secure proof that a DS
# record somewhere between the root and the domain does not exist.
# The cost of setting this is that even queries in unsigned domains will need
# one or more extra DNS queries to verify.
#dnssec-check-unsigned

# Uncomment this to filter useless windows-originated DNS requests
# which can trigger dial-on-demand links needlessly.
# Note that (amongst other things) this blocks all SRV requests,
# so don't use it if you use eg Kerberos, SIP, XMMP or Google-talk.
# This option only affects forwarding, SRV records originating for
# dnsmasq (via srv-host= lines) are not suppressed by it.
#filterwin2k

# Change this line if you want dns to get its upstream servers from
# somewhere other that /etc/resolv.conf
#resolv-file=

# By  default,  dnsmasq  will  send queries to any of the upstream
# servers it knows about and tries to favour servers to are  known
# to  be  up.  Uncommenting this forces dnsmasq to try each query
# with  each  server  strictly  in  the  order  they   appear   in
# /etc/resolv.conf
#strict-order

# If you don't want dnsmasq to read /etc/resolv.conf or any other
# file, getting its servers from this file instead (see below), then
# uncomment this.
#no-resolv

# If you don't want dnsmasq to poll /etc/resolv.conf or other resolv
# files for changes and re-read them then uncomment this.
#no-poll

# Add other name servers here, with domain specs if they are for
# non-public domains.
#server=/localnet/192.168.0.1

# Example of routing PTR queries to nameservers: this will send all
# address->name queries for 192.168.3/24 to nameserver 10.1.2.3
#server=/3.168.192.in-addr.arpa/10.1.2.3

# Add local-only domains here, queries in these domains are answered
# from /etc/hosts or DHCP only.
#local=/localnet/

# Add domains which you want to force to an IP address here.
# The example below send any host in double-click.net to a local
# web-server.
#address=/double-click.net/127.0.0.1

# --address (and --server) work with IPv6 addresses too.
#address=/www.thekelleys.org.uk/fe80::20d:60ff:fe36:f83

# Add the IPs of all queries to yahoo.com, google.com, and their
# subdomains to the vpn and search ipsets:
#ipset=/yahoo.com/google.com/vpn,search

# You can control how dnsmasq talks to a server: this forces
# queries to 10.1.2.3 to be routed via eth1
# server=10.1.2.3@eth1

# and this sets the source (ie local) address used to talk to
# 10.1.2.3 to 192.168.1.1 port 55 (there must be an interface with that
# IP on the machine, obviously).
# server=10.1.2.3@192.168.1.1#55

# If you want dnsmasq to change uid and gid to something other
# than the default, edit the following lines.
user=dnsmasq
group=dnsmasq

# If you want dnsmasq to listen for DHCP and DNS requests only on
# specified interfaces (and the loopback) give the name of the
# interface (eg eth0) here.
# Repeat the line for more than one interface.
#interface=
# Listen only on localhost by default
interface=enp0s8
# Or you can specify which interface _not_ to listen on
#except-interface=
# Or which to listen on by address (remember to include 127.0.0.1 if
# you use this.)
#listen-address=
# If you want dnsmasq to provide only DNS service on an interface,
# configure it as shown above, and then use the following line to
# disable DHCP and TFTP on it.
#no-dhcp-interface=

# Serve DNS and DHCP only to networks directly connected to this machine.
# Any interface= line will override it.
#local-service

# On systems which support it, dnsmasq binds the wildcard address,
# even when it is listening on only some interfaces. It then discards
# requests that it shouldn't reply to. This has the advantage of
# working even when interfaces come and go and change address. If you
# want dnsmasq to really bind only the interfaces it is listening on,
# uncomment this option. About the only time you may need this is when
# running another nameserver on the same machine.
#
# To listen only on localhost and do not receive packets on other
# interfaces, bind only to lo device. Comment out to bind on single
# wildcard socket.
bind-interfaces

# If you don't want dnsmasq to read /etc/hosts, uncomment the
# following line.
#no-hosts
# or if you want it to read another file, as well as /etc/hosts, use
# this.
#addn-hosts=/etc/banner_add_hosts

# Set this (and domain: see below) if you want to have a domain
# automatically added to simple names in a hosts-file.
#expand-hosts

# Set the domain for dnsmasq. this is optional, but if it is set, it
# does the following things.
# 1) Allows DHCP hosts to have fully qualified domain names, as long
#     as the domain part matches this setting.
# 2) Sets the "domain" DHCP option thereby potentially setting the
#    domain of all systems configured by DHCP
# 3) Provides the domain part for "expand-hosts"
#domain=thekelleys.org.uk

# Set a different domain for a particular subnet
#domain=wireless.thekelleys.org.uk,192.168.2.0/24

# Same idea, but range rather then subnet
#domain=reserved.thekelleys.org.uk,192.68.3.100,192.168.3.200

# Uncomment this to enable the integrated DHCP server, you need
# to supply the range of addresses available for lease and optionally
# a lease time. If you have more than one network, you will need to
# repeat this for each network on which you want to supply DHCP
# service.
#dhcp-range=192.168.0.50,192.168.0.150,12h

# This is an example of a DHCP range where the netmask is given. This
# is needed for networks we reach the dnsmasq DHCP server via a relay
# agent. If you don't know what a DHCP relay agent is, you probably
# don't need to worry about this.
#dhcp-range=192.168.0.50,192.168.0.150,255.255.255.0,12h

# This is an example of a DHCP range which sets a tag, so that
# some DHCP options may be set only for this network.
#dhcp-range=set:red,192.168.0.50,192.168.0.150

# Use this DHCP range only when the tag "green" is set.
#dhcp-range=tag:green,192.168.0.50,192.168.0.150,12h

# Specify a subnet which can't be used for dynamic address allocation,
# is available for hosts with matching --dhcp-host lines. Note that
# dhcp-host declarations will be ignored unless there is a dhcp-range
# of some type for the subnet in question.
# In this case the netmask is implied (it comes from the network
# configuration on the machine running dnsmasq) it is possible to give
# an explicit netmask instead.
#dhcp-range=192.168.0.0,static

# Enable DHCPv6. Note that the prefix-length does not need to be specified
# and defaults to 64 if missing/
#dhcp-range=1234::2, 1234::500, 64, 12h

# Do Router Advertisements, BUT NOT DHCP for this subnet.
#dhcp-range=1234::, ra-only

# Do Router Advertisements, BUT NOT DHCP for this subnet, also try and
# add names to the DNS for the IPv6 address of SLAAC-configured dual-stack
# hosts. Use the DHCPv4 lease to derive the name, network segment and
# MAC address and assume that the host will also have an
# IPv6 address calculated using the SLAAC algorithm.
#dhcp-range=1234::, ra-names

# Do Router Advertisements, BUT NOT DHCP for this subnet.
# Set the lifetime to 46 hours. (Note: minimum lifetime is 2 hours.)
#dhcp-range=1234::, ra-only, 48h

# Do DHCP and Router Advertisements for this subnet. Set the A bit in the RA
# so that clients can use SLAAC addresses as well as DHCP ones.
#dhcp-range=1234::2, 1234::500, slaac

# Do Router Advertisements and stateless DHCP for this subnet. Clients will
# not get addresses from DHCP, but they will get other configuration information.
# They will use SLAAC for addresses.
#dhcp-range=1234::, ra-stateless

# Do stateless DHCP, SLAAC, and generate DNS names for SLAAC addresses
# from DHCPv4 leases.
#dhcp-range=1234::, ra-stateless, ra-names

# Do router advertisements for all subnets where we're doing DHCPv6
# Unless overridden by ra-stateless, ra-names, et al, the router
# advertisements will have the M and O bits set, so that the clients
# get addresses and configuration from DHCPv6, and the A bit reset, so the
# clients don't use SLAAC addresses.
#enable-ra

# Supply parameters for specified hosts using DHCP. There are lots
# of valid alternatives, so we will give examples of each. Note that
# IP addresses DO NOT have to be in the range given above, they just
# need to be on the same network. The order of the parameters in these
# do not matter, it's permissible to give name, address and MAC in any
# order.

# Always allocate the host with Ethernet address 11:22:33:44:55:66
# The IP address 192.168.0.60
#dhcp-host=11:22:33:44:55:66,192.168.0.60

# Always set the name of the host with hardware address
# 11:22:33:44:55:66 to be "fred"
#dhcp-host=11:22:33:44:55:66,fred

# Always give the host with Ethernet address 11:22:33:44:55:66
# the name fred and IP address 192.168.0.60 and lease time 45 minutes
#dhcp-host=11:22:33:44:55:66,fred,192.168.0.60,45m

# Give a host with Ethernet address 11:22:33:44:55:66 or
# 12:34:56:78:90:12 the IP address 192.168.0.60. Dnsmasq will assume
# that these two Ethernet interfaces will never be in use at the same
# time, and give the IP address to the second, even if it is already
# in use by the first. Useful for laptops with wired and wireless
# addresses.
#dhcp-host=11:22:33:44:55:66,12:34:56:78:90:12,192.168.0.60

# Give the machine which says its name is "bert" IP address
# 192.168.0.70 and an infinite lease
#dhcp-host=bert,192.168.0.70,infinite

# Always give the host with client identifier 01:02:02:04
# the IP address 192.168.0.60
#dhcp-host=id:01:02:02:04,192.168.0.60

# Always give the InfiniBand interface with hardware address
# 80:00:00:48:fe:80:00:00:00:00:00:00:f4:52:14:03:00:28:05:81 the
# ip address 192.168.0.61. The client id is derived from the prefix
# ff:00:00:00:00:00:02:00:00:02:c9:00 and the last 8 pairs of
# hex digits of the hardware address.
#dhcp-host=id:ff:00:00:00:00:00:02:00:00:02:c9:00:f4:52:14:03:00:28:05:81,192.168.0.61

# Always give the host with client identifier "marjorie"
# the IP address 192.168.0.60
#dhcp-host=id:marjorie,192.168.0.60

# Enable the address given for "judge" in /etc/hosts
# to be given to a machine presenting the name "judge" when
# it asks for a DHCP lease.
#dhcp-host=judge

# Never offer DHCP service to a machine whose Ethernet
# address is 11:22:33:44:55:66
#dhcp-host=11:22:33:44:55:66,ignore

# Ignore any client-id presented by the machine with Ethernet
# address 11:22:33:44:55:66. This is useful to prevent a machine
# being treated differently when running under different OS's or
# between PXE boot and OS boot.
#dhcp-host=11:22:33:44:55:66,id:*

# Send extra options which are tagged as "red" to
# the machine with Ethernet address 11:22:33:44:55:66
#dhcp-host=11:22:33:44:55:66,set:red

# Send extra options which are tagged as "red" to
# any machine with Ethernet address starting 11:22:33:
#dhcp-host=11:22:33:*:*:*,set:red

# Give a fixed IPv6 address and name to client with
# DUID 00:01:00:01:16:d2:83:fc:92:d4:19:e2:d8:b2
# Note the MAC addresses CANNOT be used to identify DHCPv6 clients.
# Note also that the [] around the IPv6 address are obligatory.
#dhcp-host=id:00:01:00:01:16:d2:83:fc:92:d4:19:e2:d8:b2, fred, [1234::5]

# Ignore any clients which are not specified in dhcp-host lines
# or /etc/ethers. Equivalent to ISC "deny unknown-clients".
# This relies on the special "known" tag which is set when
# a host is matched.
#dhcp-ignore=tag:!known

# Send extra options which are tagged as "red" to any machine whose
# DHCP vendorclass string includes the substring "Linux"
#dhcp-vendorclass=set:red,Linux

# Send extra options which are tagged as "red" to any machine one
# of whose DHCP userclass strings includes the substring "accounts"
#dhcp-userclass=set:red,accounts

# Send extra options which are tagged as "red" to any machine whose
# MAC address matches the pattern.
#dhcp-mac=set:red,00:60:8C:*:*:*

# If this line is uncommented, dnsmasq will read /etc/ethers and act
# on the ethernet-address/IP pairs found there just as if they had
# been given as --dhcp-host options. Useful if you keep
# MAC-address/host mappings there for other purposes.
#read-ethers

# Send options to hosts which ask for a DHCP lease.
# See RFC 2132 for details of available options.
# Common options can be given to dnsmasq by name:
# run "dnsmasq --help dhcp" to get a list.
# Note that all the common settings, such as netmask and
# broadcast address, DNS server and default route, are given
# sane defaults by dnsmasq. You very likely will not need
# any dhcp-options. If you use Windows clients and Samba, there
# are some options which are recommended, they are detailed at the
# end of this section.

# Override the default route supplied by dnsmasq, which assumes the
# router is the same machine as the one running dnsmasq.
#dhcp-option=3,1.2.3.4

# Do the same thing, but using the option name
#dhcp-option=option:router,1.2.3.4

# Override the default route supplied by dnsmasq and send no default
# route at all. Note that this only works for the options sent by
# default (1, 3, 6, 12, 28) the same line will send a zero-length option
# for all other option numbers.
#dhcp-option=3

# Set the NTP time server addresses to 192.168.0.4 and 10.10.0.5
#dhcp-option=option:ntp-server,192.168.0.4,10.10.0.5

# Send DHCPv6 option. Note [] around IPv6 addresses.
#dhcp-option=option6:dns-server,[1234::77],[1234::88]

# Send DHCPv6 option for namservers as the machine running
# dnsmasq and another.
#dhcp-option=option6:dns-server,[::],[1234::88]

# Ask client to poll for option changes every six hours. (RFC4242)
#dhcp-option=option6:information-refresh-time,6h

# Set option 58 client renewal time (T1). Defaults to half of the
# lease time if not specified. (RFC2132)
#dhcp-option=option:T1,1m

# Set option 59 rebinding time (T2). Defaults to 7/8 of the
# lease time if not specified. (RFC2132)
#dhcp-option=option:T2,2m

# Set the NTP time server address to be the same machine as
# is running dnsmasq
#dhcp-option=42,0.0.0.0

# Set the NIS domain name to "welly"
#dhcp-option=40,welly

# Set the default time-to-live to 50
#dhcp-option=23,50

# Set the "all subnets are local" flag
#dhcp-option=27,1

# Send the etherboot magic flag and then etherboot options (a string).
#dhcp-option=128,e4:45:74:68:00:00
#dhcp-option=129,NIC=eepro100

# Specify an option which will only be sent to the "red" network
# (see dhcp-range for the declaration of the "red" network)
# Note that the tag: part must precede the option: part.
#dhcp-option = tag:red, option:ntp-server, 192.168.1.1

# The following DHCP options set up dnsmasq in the same way as is specified
# for the ISC dhcpcd in
# http://www.samba.org/samba/ftp/docs/textdocs/DHCP-Server-Configuration.txt
# adapted for a typical dnsmasq installation where the host running
# dnsmasq is also the host running samba.
# you may want to uncomment some or all of them if you use
# Windows clients and Samba.
#dhcp-option=19,0           # option ip-forwarding off
#dhcp-option=44,0.0.0.0     # set netbios-over-TCP/IP nameserver(s) aka WINS server(s)
#dhcp-option=45,0.0.0.0     # netbios datagram distribution server
#dhcp-option=46,8           # netbios node type

# Send an empty WPAD option. This may be REQUIRED to get windows 7 to behave.
#dhcp-option=252,"\n"

# Send RFC-3397 DNS domain search DHCP option. WARNING: Your DHCP client
# probably doesn't support this......
#dhcp-option=option:domain-search,eng.apple.com,marketing.apple.com

# Send RFC-3442 classless static routes (note the netmask encoding)
#dhcp-option=121,192.168.1.0/24,1.2.3.4,10.0.0.0/8,5.6.7.8

# Send vendor-class specific options encapsulated in DHCP option 43.
# The meaning of the options is defined by the vendor-class so
# options are sent only when the client supplied vendor class
# matches the class given here. (A substring match is OK, so "MSFT"
# matches "MSFT" and "MSFT 5.0"). This example sets the
# mtftp address to 0.0.0.0 for PXEClients.
#dhcp-option=vendor:PXEClient,1,0.0.0.0

# Send microsoft-specific option to tell windows to release the DHCP lease
# when it shuts down. Note the "i" flag, to tell dnsmasq to send the
# value as a four-byte integer - that's what microsoft wants. See
# http://technet2.microsoft.com/WindowsServer/en/library/a70f1bb7-d2d4-49f0-96d6-4b7414ecfaae1033.mspx?mfr=true
#dhcp-option=vendor:MSFT,2,1i

# Send the Encapsulated-vendor-class ID needed by some configurations of
# Etherboot to allow is to recognise the DHCP server.
#dhcp-option=vendor:Etherboot,60,"Etherboot"

# Send options to PXELinux. Note that we need to send the options even
# though they don't appear in the parameter request list, so we need
# to use dhcp-option-force here.
# See http://syslinux.zytor.com/pxe.php#special for details.
# Magic number - needed before anything else is recognised
#dhcp-option-force=208,f1:00:74:7e
# Configuration file name
#dhcp-option-force=209,configs/common
# Path prefix
#dhcp-option-force=210,/tftpboot/pxelinux/files/
# Reboot time. (Note 'i' to send 32-bit value)
#dhcp-option-force=211,30i

# Set the boot filename for netboot/PXE. You will only need
# this if you want to boot machines over the network and you will need
# a TFTP server; either dnsmasq's built-in TFTP server or an
# external one. (See below for how to enable the TFTP server.)
#dhcp-boot=pxelinux.0

# The same as above, but use custom tftp-server instead machine running dnsmasq
#dhcp-boot=pxelinux,server.name,192.168.1.100

# Boot for iPXE. The idea is to send two different
# filenames, the first loads iPXE, and the second tells iPXE what to
# load. The dhcp-match sets the ipxe tag for requests from iPXE.
#dhcp-boot=undionly.kpxe
#dhcp-match=set:ipxe,175 # iPXE sends a 175 option.
#dhcp-boot=tag:ipxe,http://boot.ipxe.org/demo/boot.php

# Encapsulated options for iPXE. All the options are
# encapsulated within option 175
#dhcp-option=encap:175, 1, 5b         # priority code
#dhcp-option=encap:175, 176, 1b       # no-proxydhcp
#dhcp-option=encap:175, 177, string   # bus-id
#dhcp-option=encap:175, 189, 1b       # BIOS drive code
#dhcp-option=encap:175, 190, user     # iSCSI username
#dhcp-option=encap:175, 191, pass     # iSCSI password

# Test for the architecture of a netboot client. PXE clients are
# supposed to send their architecture as option 93. (See RFC 4578)
#dhcp-match=peecees, option:client-arch, 0 #x86-32
#dhcp-match=itanics, option:client-arch, 2 #IA64
#dhcp-match=hammers, option:client-arch, 6 #x86-64
#dhcp-match=mactels, option:client-arch, 7 #EFI x86-64

# Do real PXE, rather than just booting a single file, this is an
# alternative to dhcp-boot.
#pxe-prompt="What system shall I netboot?"
# or with timeout before first available action is taken:
#pxe-prompt="Press F8 for menu.", 60

# Available boot services. for PXE.
#pxe-service=x86PC, "Boot from local disk"

# Loads <tftp-root>/pxelinux.0 from dnsmasq TFTP server.
#pxe-service=x86PC, "Install Linux", pxelinux

# Loads <tftp-root>/pxelinux.0 from TFTP server at 1.2.3.4.
# Beware this fails on old PXE ROMS.
#pxe-service=x86PC, "Install Linux", pxelinux, 1.2.3.4

# Use bootserver on network, found my multicast or broadcast.
#pxe-service=x86PC, "Install windows from RIS server", 1

# Use bootserver at a known IP address.
#pxe-service=x86PC, "Install windows from RIS server", 1, 1.2.3.4

# If you have multicast-FTP available,
# information for that can be passed in a similar way using options 1
# to 5. See page 19 of
# http://download.intel.com/design/archives/wfm/downloads/pxespec.pdf


# Enable dnsmasq's built-in TFTP server
#enable-tftp

# Set the root directory for files available via FTP.
#tftp-root=/var/ftpd

# Do not abort if the tftp-root is unavailable
#tftp-no-fail

# Make the TFTP server more secure: with this set, only files owned by
# the user dnsmasq is running as will be send over the net.
#tftp-secure

# This option stops dnsmasq from negotiating a larger blocksize for TFTP
# transfers. It will slow things down, but may rescue some broken TFTP
# clients.
#tftp-no-blocksize

# Set the boot file name only when the "red" tag is set.
#dhcp-boot=tag:red,pxelinux.red-net

# An example of dhcp-boot with an external TFTP server: the name and IP
# address of the server are given after the filename.
# Can fail with old PXE ROMS. Overridden by --pxe-service.
#dhcp-boot=/var/ftpd/pxelinux.0,boothost,192.168.0.3

# If there are multiple external tftp servers having a same name
# (using /etc/hosts) then that name can be specified as the
# tftp_servername (the third option to dhcp-boot) and in that
# case dnsmasq resolves this name and returns the resultant IP
# addresses in round robin fashion. This facility can be used to
# load balance the tftp load among a set of servers.
#dhcp-boot=/var/ftpd/pxelinux.0,boothost,tftp_server_name

# Set the limit on DHCP leases, the default is 150
#dhcp-lease-max=150

# The DHCP server needs somewhere on disk to keep its lease database.
# This defaults to a sane location, but if you want to change it, use
# the line below.
#dhcp-leasefile=/var/lib/dnsmasq/dnsmasq.leases

# Set the DHCP server to authoritative mode. In this mode it will barge in
# and take over the lease for any client which broadcasts on the network,
# whether it has a record of the lease or not. This avoids long timeouts
# when a machine wakes up on a new network. DO NOT enable this if there's
# the slightest chance that you might end up accidentally configuring a DHCP
# server for your campus/company accidentally. The ISC server uses
# the same option, and this URL provides more information:
# http://www.isc.org/files/auth.html
#dhcp-authoritative

# Set the DHCP server to enable DHCPv4 Rapid Commit Option per RFC 4039.
# In this mode it will respond to a DHCPDISCOVER message including a Rapid Commit
# option with a DHCPACK including a Rapid Commit option and fully committed address
# and configuration information. This must only be enabled if either the server is
# the only server for the subnet, or multiple servers are present and they each
# commit a binding for all clients.
#dhcp-rapid-commit

# Run an executable when a DHCP lease is created or destroyed.
# The arguments sent to the script are "add" or "del",
# then the MAC address, the IP address and finally the hostname
# if there is one.
#dhcp-script=/bin/echo

# Set the cachesize here.
#cache-size=150

# If you want to disable negative caching, uncomment this.
#no-negcache

# Normally responses which come from /etc/hosts and the DHCP lease
# file have Time-To-Live set as zero, which conventionally means
# do not cache further. If you are happy to trade lower load on the
# server for potentially stale date, you can set a time-to-live (in
# seconds) here.
#local-ttl=

# If you want dnsmasq to detect attempts by Verisign to send queries
# to unregistered .com and .net hosts to its sitefinder service and
# have dnsmasq instead return the correct NXDOMAIN response, uncomment
# this line. You can add similar lines to do the same for other
# registries which have implemented wildcard A records.
#bogus-nxdomain=64.94.110.11

# If you want to fix up DNS results from upstream servers, use the
# alias option. This only works for IPv4.
# This alias makes a result of 1.2.3.4 appear as 5.6.7.8
#alias=1.2.3.4,5.6.7.8
# and this maps 1.2.3.x to 5.6.7.x
#alias=1.2.3.0,5.6.7.0,255.255.255.0
# and this maps 192.168.0.10->192.168.0.40 to 10.0.0.10->10.0.0.40
#alias=192.168.0.10-192.168.0.40,10.0.0.0,255.255.255.0

# Change these lines if you want dnsmasq to serve MX records.

# Return an MX record named "maildomain.com" with target
# servermachine.com and preference 50
#mx-host=maildomain.com,servermachine.com,50

# Set the default target for MX records created using the localmx option.
#mx-target=servermachine.com

# Return an MX record pointing to the mx-target for all local
# machines.
#localmx

# Return an MX record pointing to itself for all local machines.
#selfmx

# Change the following lines if you want dnsmasq to serve SRV
# records.  These are useful if you want to serve ldap requests for
# Active Directory and other windows-originated DNS requests.
# See RFC 2782.
# You may add multiple srv-host lines.
# The fields are <name>,<target>,<port>,<priority>,<weight>
# If the domain part if missing from the name (so that is just has the
# service and protocol sections) then the domain given by the domain=
# config option is used. (Note that expand-hosts does not need to be
# set for this to work.)

# A SRV record sending LDAP for the example.com domain to
# ldapserver.example.com port 389
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389

# A SRV record sending LDAP for the example.com domain to
# ldapserver.example.com port 389 (using domain=)
#domain=example.com
#srv-host=_ldap._tcp,ldapserver.example.com,389

# Two SRV records for LDAP, each with different priorities
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,1
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,2

# A SRV record indicating that there is no LDAP server for the domain
# example.com
#srv-host=_ldap._tcp.example.com

# The following line shows how to make dnsmasq serve an arbitrary PTR
# record. This is useful for DNS-SD. (Note that the
# domain-name expansion done for SRV records _does_not
# occur for PTR records.)
#ptr-record=_http._tcp.dns-sd-services,"New Employee Page._http._tcp.dns-sd-services"

# Change the following lines to enable dnsmasq to serve TXT records.
# These are used for things like SPF and zeroconf. (Note that the
# domain-name expansion done for SRV records _does_not
# occur for TXT records.)

#Example SPF.
#txt-record=example.com,"v=spf1 a -all"

#Example zeroconf
#txt-record=_http._tcp.example.com,name=value,paper=A4

# Provide an alias for a "local" DNS name. Note that this _only_ works
# for targets which are names from DHCP or /etc/hosts. Give host
# "bert" another name, bertrand
#cname=bertand,bert

# For debugging purposes, log each DNS query as it passes through
# dnsmasq.
#log-queries

# Log lots of extra information about DHCP transactions.
#log-dhcp

# Include another lot of configuration options.
#conf-file=/etc/dnsmasq.more.conf
#conf-dir=/etc/dnsmasq.d

# Include all the files in a directory except those ending in .bak
#conf-dir=/etc/dnsmasq.d,.bak

# Include all files in a directory which end in .conf
#conf-dir=/etc/dnsmasq.d/,*.conf

# Include all files in /etc/dnsmasq.d except RPM backup files
conf-dir=/etc/dnsmasq.d,.rpmnew,.rpmsave,.rpmorig

# If a DHCP client claims that its name is "wpad", ignore that.
# This fixes a security hole. see CERT Vulnerability VU#598349
#dhcp-name-match=set:wpad-ignore,wpad
#dhcp-ignore-names=tag:wpad-ignore




[root@localhost 01_docker]# systemctl restart dnsmasq

[root@localhost 01_docker]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

172.16.0.200    docker  myregistry.com  mygitlab.com    mysonar.com     myjenkins.com
172.16.0.201    controlplane
172.16.0.202    node01
172.16.0.203    node02[root@localhost 01_docker]#

172.16.0.203    node02[root@localhost 01_docker]# cd ..
[root@localhost jenkins]# cd 02_gitlab/
[root@localhost 02_gitlab]# ls
create_cert.sh  docker-compose.yaml

[root@localhost 02_gitlab]# cat create_cert.sh
#!/bin/bash

mkdir /auth

openssl \
req -newkey rsa:4096 -nodes -sha256 -x509 \
-days 365 -keyout /auth/myregistry.com.key -out /auth/myregistry.com.crt \
-subj '/CN=myregistry.com' \
-addext "subjectAltName = DNS:myregistry.com"

mkdir -p /etc/docker/certs.d/myregistry.com
cp /auth/myregistry.com.crt /etc/docker/certs.d/myregistry.com/ca.crt[root@localhost 02_gitlab]#



[root@localhost 02_gitlab]# sh create_cert.sh			# 스크립트명령(sh)로 인증서 만들기


-----



[root@localhost 02_gitlab]# ls /etc/docker/certs.d/myregistry.com/			# 만들어진 인증서 확인
ca.crt

[root@localhost 02_gitlab]# cat /etc/docker/certs.d/myregistry.com/ca.crt
-----BEGIN CERTIFICATE-----
MIIFLjCCAxagAwIBAgIUYnv8uclAROV7pJPZFgA7ZJsBzPQwDQYJKoZIhvcNAQEL
BQAwGTEXMBUGA1UEAwwObXlyZWdpc3RyeS5jb20wHhcNMjQwNjMwMDEyMDE5WhcN
MjUwNjMwMDEyMDE5WjAZMRcwFQYDVQQDDA5teXJlZ2lzdHJ5LmNvbTCCAiIwDQYJ
KoZIhvcNAQEBBQADggIPADCCAgoCggIBAOKWp4Y3JizZLnzZhpggopk6uAth0xI9
zqaD3R4a/cluh9H5Q25XsUqVVcG7pEJKvgA+qfEvvV2n4JPzU1mWv4X7xIffn0RU
cJnxbEdaL04uMv9+E3yoeHA+7OYpha8Xdm4FrBTwc4GjZWDnvNCFKRpqlhUnxs2b
LU9aq9hD14SQYUPPB6zF053k8N4zLuPGdFp4op7ppT2zGcxnVfhvXL1BHccx2Wv+
D7R2SkuMu/bu147lHL8B1N2/E3yhnF1geRJc8y9JR+gkQX0+560/2Yy2nRLNkF0g
4AFS2QN2Oaw/kCi7VBW5m6ZkVIiUsHRmksO6X+vDSFWmq8lB+UtV7kCV+gw43Vrq
4jYftUpzNOtKneuwrKZER1Qqc3wmza8DJGU4aa8XBvSZD1+W1/JZNvtdL8an4k0a
HU2m4ViNbvDB2k/9ZzJnqhQHGPPGnUcWKNgSz8qgfVf8CUNqtzOib/UOaA4oLRNV
EibouXPL4EiMOy8qkww9eBfE92b9KemYWNN9vPq9qgHmGvl5jLCuouaXWZQFvtiw
ulrGLWCq+UAyBHJ3B1ThKR1VY2xaASLHWJzjk9sJZkOFTw7aoIdhgABqWnQdd98h
t9k4v1kEIZPogN4dPTgUXffCITFmItvqGoV+Bw39Pq1bs7IINtrC6UB377XtrnUK
MDGsB3k56z8ZAgMBAAGjbjBsMB0GA1UdDgQWBBRf54y36Yvk8P0Natibihez551I
0DAfBgNVHSMEGDAWgBRf54y36Yvk8P0Natibihez551I0DAPBgNVHRMBAf8EBTAD
AQH/MBkGA1UdEQQSMBCCDm15cmVnaXN0cnkuY29tMA0GCSqGSIb3DQEBCwUAA4IC
AQDbK61qn1MtVmwFYYE/Y0g5uei8wGpUOm6ZRVgKTEF1pXiZXgW2PagRlCZRR7/X
yeY1OQSZEVOMLpfGj/gksGr14a79pPVArNssDyK2JjmldOruexCnG0lElnBvVBxY
0nsTzT9JyaubrFRl3+f9x2kYudB3qP2ZWt/NZqcxIbn3hFd5Pk1OJVvHoPLyZoyV
1WXadksRs0qssstdMMp/8WuN1ZAZGhUFNKa/yRHfhDZntMJcUKY3ORkA2GYM8vdd
hXkuFyA59+Xz6MfwD/9AxzRq2xazf1T1kppvoSz4ZsszIeuWgbWKYJAxobFk8zyj
1lJElNoPJNqfeZT1ELGgiT2EzmbcLiKHGguaYA89yPoJlIgo6LodSWh5O858dEzd
slAeGVXcgLQCeztc0h7vP7WUMzmbZ1vtvt5rFI7wuZo2+k3GPJZZSWsdyR39rF45
dMuiv8UAzV9kTgP7FQu6VzHQvNn+MWYV95fN1JDHWjHHhQe7dA2tGV0QHKDAgZZ1
3Ye91Nt4r2cMBerkY/sgiWDkW+s4p6TvInpHVlFRITIeudMUMJzacIAgnRsWUvMa
5Rwn/fbl4gY4S7p7mKyPmi3oiA733DJFsrnuR4bUL78siXVWpa0Ug5S90awkbzj4
cpB8nTKUK8BfGa9ovWtdvQMXJ6ybJuShp5Jfqq1bpQeA6Q==
-----END CERTIFICATE-----


repository
	- code
	- binary
	- image



[root@localhost 02_gitlab]# cat docker-compose.yaml		# docker compose 파일 확인
services:
  gitlab:
    image: 'quay.io/uvelyster/gitlab-ce:latest'
    restart: always
    hostname: 'mygitlab.com'
    container_name: gitlab
    dns: 172.16.0.200
    environment:
      GITLAB_ROOT_PASSWORD: P@ssw0rd
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://mygitlab.com'
        registry_external_url 'https://myregistry.com'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/root/gitlab/config:/etc/gitlab'
      - '/auth:/etc/gitlab/ssl'
      - '/root/gitlab/logs:/var/log/gitlab'
      - '/root/gitlab/data:/var/opt/gitlab'
      - '/root/gitlab/backup:/var/opt/gitlab/backups'
      - '/root/gitlab/registry:/var/opt/gitlab/gitlab-rails/shared/registry'[root@localhost 02_gitlab]#



SCM -> Source Code Management
VCS -> Version Control System




GitLab 실습

웹 브라우저에서 http://172.16.0.200/

	id : root
	pw : P@ssw0rd

로그인 한 후
	[Admin Area] -> Network -> Outbound requests 항목에서 Allow requests to the local network from webhooks and integrations 체크, Allow requests to the local network from system hooks 체크
프로젝트로 이동합니다.

[root@localhost 02_gitlab]# cd ~		# git init -> local repository 설정
[root@localhost ~]# mkdir gittest
[root@localhost ~]# cd gittest
[root@localhost gittest]# git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint:   git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint:   git branch -m <name>
Initialized empty Git repository in /root/gittest/.git/
[root@localhost gittest]# touch testfile1		
[root@localhost gittest]#				


[root@localhost gittest]# git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        testfile1

nothing added to commit but untracked files present (use "git add" to track)
[root@localhost gittest]# git add .			# git add -> staging
[root@localhost gittest]# git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   testfile1

[root@localhost gittest]# git commit -m "init"		# git commit -> commit 생성
[master (root-commit) d31284b] init
 Committer: root <root@localhost.localdomain>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 testfile1

[root@localhost gittest]# touch testfile2

[root@localhost gittest]# echo helloworld > testfile1

[root@localhost gittest]# git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   testfile1

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        testfile2

no changes added to commit (use "git add" and/or "git commit -a")


[root@localhost gittest]# git commit -a -m "only testfile1"
[master 5fb8f7e] only testfile1
 Committer: root <root@localhost.localdomain>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
[root@localhost gittest]# git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        testfile2

nothing added to commit but untracked files present (use "git add" to track)
[root@localhost gittest]#

 git commit -a 옵션의 경우 새로 만든 파일 testfile2 는 add 되지 못함(staging 되지 않음)

[root@localhost gittest]# git add testfile2

[root@localhost gittest]# git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   testfile2

[root@localhost gittest]# git commit -m "add testfile2"
[master b07fee2] add testfile2
 Committer: root <root@localhost.localdomain>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 testfile2
[root@localhost gittest]#


[root@localhost gittest]# git branch		# 브런치 목록
* master

[root@localhost gittest]# git branch testing	# 브런치 생성

[root@localhost gittest]# git branch
* master
  testing

[root@localhost gittest]# git checkout testing	# 새로운 브런치 교체
Switched to branch 'testing'
[root@localhost gittest]# git branch
  master
* testing



[root@localhost gittest]# touch testfile3

[root@localhost gittest]# git add .

[root@localhost gittest]# git commit -m "add testfile3"

[testing ca7cc20] add testfile3
 Committer: root <root@localhost.localdomain>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 testfile3

[root@localhost gittest]# ls
testfile1  testfile2  testfile3

[root@localhost gittest]# git checkout master
Switched to branch 'master'

[root@localhost gittest]# ls
testfile1  testfile2

[root@localhost gittest]# git checkout testing
Switched to branch 'testing'
[root@localhost gittest]# ls
testfile1  testfile2  testfile3

[root@localhost gittest]#

testing 브런치(hotfixes)는 기능 개발을 계속하고, 적용시에는 master 브런치로 통합
git-flow 정책(우아한 형제들의 버전 관리 기법)


[root@localhost gittest]# git remote add origin http://mygitlab.com/root/test.git

[root@localhost gittest]# git push -u origin master
Username for 'http://mygitlab.com': root
Password for 'http://root@mygitlab.com':
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (8/8), 648 bytes | 648.00 KiB/s, done.
Total 8 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote:
remote: The private project root/test was successfully created.
remote:
remote: To configure the remote, run:
remote:   git remote add origin http://mygitlab.com/root/test.git
remote:
remote: To view the project, visit:
remote:   http://mygitlab.com/root/test
remote:
remote:
remote:
To http://mygitlab.com/root/test.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.

[root@localhost gittest]# git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

[root@localhost gittest]# git merge testing
Updating b07fee2..ca7cc20
Fast-forward
 testfile3 | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 testfile3

[root@localhost gittest]# ls
testfile1  testfile2  testfile3

[root@localhost gittest]# git push -u origin master
Username for 'http://mygitlab.com': root
Password for 'http://root@mygitlab.com':
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 262 bytes | 262.00 KiB/s, done.
Total 2 (delta 0), reused 0 (delta 0), pack-reused 0
To http://mygitlab.com/root/test.git
   b07fee2..ca7cc20  master -> master
branch 'master' set up to track 'origin/master'.

[root@localhost gittest]#


웹 브라우저에서 http://172.16.0.200을 입력하여 gitLab을 실행한다.




[root@localhost gittest]# cd
[root@localhost ~]# cd jenkins/
[root@localhost jenkins]# ls
01_docker  02_gitlab  03_jenkins  04_harbor  05_owasp  06_sonarqube  07_artifactory  08_kubernetes  nodejs
[root@localhost jenkins]# git remote -v
origin  https://github.com/uvelys/jenkins.git (fetch)
origin  https://github.com/uvelys/jenkins.git (push)
[root@localhost jenkins]# cp -r nodejs ~/
[root@localhost jenkins]# ls

[root@localhost jenkins]# cd ..
[root@localhost ~]# cd nodejs
[root@localhost nodejs]# git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint:   git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint:   git branch -m <name>
Initialized empty Git repository in /root/nodejs/.git/
[root@localhost nodejs]# git add .
[root@localhost nodejs]# git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Dockerfile
        new file:   package.json
        new file:   server.js

[root@localhost nodejs]# git commit -m "init"
[master (root-commit) 66b3b1f] init
 Committer: root <root@localhost.localdomain>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 3 files changed, 49 insertions(+)
 create mode 100644 Dockerfile
 create mode 100644 package.json
 create mode 100644 server.js
[root@localhost nodejs]# git remote -v
[root@localhost nodejs]# git remote add origin http://mygitlab.com/root/nodejs.git
[root@localhost nodejs]# git push -u origin master
Username for 'http://mygitlab.com': root
Password for 'http://root@mygitlab.com':
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 925 bytes | 925.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote:
remote: The private project root/nodejs was successfully created.
remote:
remote: To configure the remote, run:
remote:   git remote add origin http://mygitlab.com/root/nodejs.git
remote:
remote: To view the project, visit:
remote:   http://mygitlab.com/root/nodejs
remote:
remote:
remote:
To http://mygitlab.com/root/nodejs.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.
[root@localhost nodejs]#

웹 브라우저에서 http://172.16.0.200을 입력하여 gitLab을 실행한다.



git init -> local repository 생성
git add -> staging
git commit -> commit 생성

git branch NAME : 브런치 생성
git branch : 브런치 목록
git checkout NAME : 브런치 변경

git remote add origin URL : 원격 레포시토리 연결
git remote remove origin : 원격 레포시토리 해제
git remote -v : 원격 저장소 목록 확인

git pull / git push : 원격 저장소 다운로드 / 업로드
git merge : 로컬에서 브런치 통합

git checkout master
git merge testing
git push






jenkins 작업

[root@localhost nodejs]# cd ~

[root@localhost ~]# cd jenkins

[root@localhost jenkins]# cd 03_jenkins/

[root@localhost 03_jenkins]# ls
remote_api.sh  run-jenkins.sh

[root@localhost 03_jenkins]# docker -H 172.16.0.200:4243 ps
Cannot connect to the Docker daemon at tcp://172.16.0.200:4243. Is the docker daemon running?

[root@localhost 03_jenkins]# cat remote_api.sh
#!/bin/bash

# Enable Remote API
sed -i 's/fd:\/\/ /fd:\/\/ -H tcp:\/\/0.0.0.0:4243 /g' /usr/lib/systemd/system/docker.service
systemctl daemon-reload ; systemctl restart docker

[root@localhost 03_jenkins]# sh remote_api.sh

[root@localhost 03_jenkins]# docker -H 172.16.0.200:4243 ps
CONTAINER ID   IMAGE                                COMMAND             CREATED       STATUS                        PORTS                                                                              NAMES
8b33ad96a057   quay.io/uvelyster/gitlab-ce:latest   "/assets/wrapper"   3 hours ago   Up About a minute (healthy)   0.0.0.0:80->80/tcp, :::80->80/tcp, 22/tcp, 0.0.0.0:443->443/tcp, :::443->443/tcp   gitlab

[root@localhost 03_jenkins]# cat run-jenkins.sh
#!/bin/bash

docker rm -f jenkins

docker run -d --name jenkins \
--restart always \
--dns 172.16.0.200 \
-p 8080:8080 \
-p 50000:50000 \
-v jenkins_home:/var/jenkins_home \
-v /var/run/docker.sock:/var/run/docker.sock \
quay.io/uvelyster/jenkins

# Add Group and docker binary
# docker exec -u 0 jenkins groupadd -g 991 docker	# docker의 GID는 991로 되어 있어 GID를 조회하여 수정해야 함
# docker exec -u 0 jenkins usermod -aG 991 jenkins
# docker cp /usr/bin/docker jenkins:/usr/bin/docker

# docker restart jenkins

[root@localhost 03_jenkins]# cat /etc/group	# docker의 GID를 확인
root:x:0:
bin:x:1:
daemon:x:2:
sys:x:3:
adm:x:4:
tty:x:5:
disk:x:6:
lp:x:7:
mem:x:8:
kmem:x:9:
wheel:x:10:
cdrom:x:11:
mail:x:12:
man:x:15:
dialout:x:18:
floppy:x:19:
games:x:20:
tape:x:33:
video:x:39:
ftp:x:50:
lock:x:54:
audio:x:63:
users:x:100:
nobody:x:65534:
utmp:x:22:
utempter:x:35:
input:x:999:
kvm:x:36:
render:x:998:
systemd-journal:x:190:
systemd-coredump:x:997:
dbus:x:81:
ssh_keys:x:101:
tss:x:59:
sssd:x:996:
sshd:x:74:
chrony:x:995:
sgx:x:994:
user1:x:1000:
docker:x:993:		# docker의 GID는 993
dnsmasq:x:992:


[root@localhost 03_jenkins]# vi run-jenkins.sh

#!/bin/bash

docker rm -f jenkins

docker run -d --name jenkins \
--restart always \
--dns 172.16.0.200 \
-p 8080:8080 \
-p 50000:50000 \
-v jenkins_home:/var/jenkins_home \
-v /var/run/docker.sock:/var/run/docker.sock \
quay.io/uvelyster/jenkins

# Add Group and docker binary
docker exec -u 0 jenkins groupadd -g 993 docker
docker exec -u 0 jenkins usermod -aG 993 jenkins
docker cp /usr/bin/docker jenkins:/usr/bin/docker

# docker restart jenkins
~
:wq


[root@localhost 03_jenkins]# cat run-jenkins.sh
#!/bin/bash

docker rm -f jenkins

docker run -d --name jenkins \
--restart always \
--dns 172.16.0.200 \
-p 8080:8080 \
-p 50000:50000 \
-v jenkins_home:/var/jenkins_home \
-v /var/run/docker.sock:/var/run/docker.sock \
quay.io/uvelyster/jenkins

# Add Group and docker binary
docker exec -u 0 jenkins groupadd -g 993 docker
docker exec -u 0 jenkins usermod -aG 993 jenkins
docker cp /usr/bin/docker jenkins:/usr/bin/docker

# docker restart jenkins
[root@localhost 03_jenkins]# sh run-jenkins.sh
Error response from daemon: No such container: jenkins
Unable to find image 'quay.io/uvelyster/jenkins:latest' locally
latest: Pulling from uvelyster/jenkins
c6cf28de8a06: Pull complete
26ed9be7ab0a: Pull complete
375903c7224b: Pull complete
d80447f776d0: Pull complete
7fe1cef1f632: Pull complete
2085cb4af69a: Pull complete
180a0f556ee8: Pull complete
754e4ade7a3c: Pull complete
3485624c255a: Pull complete
1cc5b5da888f: Pull complete
825eb67c42c3: Pull complete
1de302a348c7: Pull complete
Digest: sha256:df57c7fff6605cea4b336214e12ce5ec0531c51d26d6e2546d7a412b3b987731
Status: Downloaded newer image for quay.io/uvelyster/jenkins:latest
bf3f0da6bdeb2e57c6b78ef736dfb9eb16351eb6a0dd40300695a1d654c4441b
Successfully copied 32.5MB to jenkins:/usr/bin/docker


웹 브라우저에서 172.14.0.200:8080 으로 jenkins를 실행한다.


[root@localhost 03_jenkins]# docker logs jenkins
Running from: /usr/share/jenkins/jenkins.war
webroot: /var/jenkins_home/war
2024-06-30 05:00:06.709+0000 [id=1]     INFO    winstone.Logger#logInternal: Beginning extraction from war file
2024-06-30 05:00:07.875+0000 [id=1]     WARNING o.e.j.s.handler.ContextHandler#setContextPath: Empty contextPath
2024-06-30 05:00:07.927+0000 [id=1]     INFO    org.eclipse.jetty.server.Server#doStart: jetty-10.0.20; built: 2024-01-29T20:46:45.278Z; git: 3a745c71c23682146f262b99f4ddc4c1bc41630c; jvm 17.0.11+9
2024-06-30 05:00:08.158+0000 [id=1]     INFO    o.e.j.w.StandardDescriptorProcessor#visitServlet: NO JSP Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet
2024-06-30 05:00:08.203+0000 [id=1]     INFO    o.e.j.s.s.DefaultSessionIdManager#doStart: Session workerName=node0
2024-06-30 05:00:08.661+0000 [id=1]     INFO    hudson.WebAppMain#contextInitialized: Jenkins home directory: /var/jenkins_home found at: EnvVars.masterEnvVars.get("JENKINS_HOME")
2024-06-30 05:00:08.742+0000 [id=1]     INFO    o.e.j.s.handler.ContextHandler#doStart: Started w.@161f6623{Jenkins v2.452.1,/,file:///var/jenkins_home/war/,AVAILABLE}{/var/jenkins_home/war}
2024-06-30 05:00:08.750+0000 [id=1]     INFO    o.e.j.server.AbstractConnector#doStart: Started ServerConnector@3a1dd365{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}
2024-06-30 05:00:08.757+0000 [id=1]     INFO    org.eclipse.jetty.server.Server#doStart: Started Server@f001896{STARTING}[10.0.20,sto=0] @2493ms
2024-06-30 05:00:08.757+0000 [id=26]    INFO    winstone.Logger#logInternal: Winstone Servlet Engine running: controlPort=disabled
2024-06-30 05:00:08.948+0000 [id=34]    INFO    jenkins.InitReactorRunner$1#onAttained: Started initialization
2024-06-30 05:00:08.974+0000 [id=32]    INFO    jenkins.InitReactorRunner$1#onAttained: Listed all plugins
2024-06-30 05:00:09.628+0000 [id=32]    INFO    jenkins.InitReactorRunner$1#onAttained: Prepared all plugins
2024-06-30 05:00:09.631+0000 [id=37]    INFO    jenkins.InitReactorRunner$1#onAttained: Started all plugins
2024-06-30 05:00:09.638+0000 [id=35]    INFO    jenkins.InitReactorRunner$1#onAttained: Augmented all extensions
2024-06-30 05:00:09.786+0000 [id=39]    INFO    jenkins.InitReactorRunner$1#onAttained: System config loaded
2024-06-30 05:00:09.786+0000 [id=39]    INFO    jenkins.InitReactorRunner$1#onAttained: System config adapted
2024-06-30 05:00:09.786+0000 [id=39]    INFO    jenkins.InitReactorRunner$1#onAttained: Loaded all jobs
2024-06-30 05:00:09.787+0000 [id=39]    INFO    jenkins.InitReactorRunner$1#onAttained: Configuration for all jobs updated
2024-06-30 05:00:09.807+0000 [id=52]    INFO    hudson.util.Retrier#start: Attempt #1 to do the action check updates server
2024-06-30 05:00:10.118+0000 [id=32]    INFO    jenkins.install.SetupWizard#init:

*************************************************************
*************************************************************
*************************************************************

Jenkins initial setup is required. An admin user has been created and a password generated.
Please use the following password to proceed to installation:

b5061c0523b64e5e83253e0245be0c4e			# jenkins 임시 비밀번호

This may also be found at: /var/jenkins_home/secrets/initialAdminPassword

*************************************************************
*************************************************************
*************************************************************

2024-06-30 05:00:53.992+0000 [id=32]    INFO    jenkins.InitReactorRunner$1#onAttained: Completed initialization
2024-06-30 05:00:54.010+0000 [id=25]    INFO    hudson.lifecycle.Lifecycle#onReady: Jenkins is fully up and running
2024-06-30 05:00:54.773+0000 [id=52]    INFO    h.m.DownloadService$Downloadable#load: Obtained the updated data file for hudson.tasks.Maven.MavenInstaller
2024-06-30 05:00:54.774+0000 [id=52]    INFO    hudson.util.Retrier#start: Performed the action check updates server successfully at the attempt #1
[root@localhost 03_jenkins]#

웹 브라우저의 jenkins 로그인 창에 b5061c0523b64e5e83253e0245be0c4e  임시 비밀번호를 입력

80 : gitlab
8080: jenkins
9000: sonarqube
8081: artifectory
8443: harbor registry


선언적 문법, 실행적 문법(groovy)
GPL / DSL


jenkins01.png~jenkins23.png 설정 후


[root@localhost 03_jenkins]# ls /var/lib/docker/volumes/jenkins_home/_data/workspace
test  test@tmp





[root@localhost 03_jenkins]# cd ..
[root@localhost jenkins]# cd 04_harbor
[root@localhost 04_harbor]# pwd
/root/jenkins/04_harbor
[root@localhost 04_harbor]# ls
Jenkinsfile  harbor.yml  install_harbor.sh
[root@localhost 04_harbor]# cp Jenkinsfile ~/nodejs
[root@localhost 04_harbor]# cat Jenkinsfile
pipeline{
    agent any
    tools {
      dockerTool 'docker'
    }
    stages{
        stage("checkout"){
            steps{
                checkout scm
            }
        }
        stage("push image"){
            steps{
                script{
                   docker.withRegistry('https://myregistry.com:8443','registry-auth'){
                       myapp = docker.build("myregistry.com:8443/test/hello:${env.BUILD_ID}")
                       myapp.push()
                    }
                }
            }
        }
    }
}




